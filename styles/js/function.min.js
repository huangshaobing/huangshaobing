! function e(t, n, r) {
	function s(o, u) {
		if (!n[o]) {
			if (!t[o]) {
				var a = "function" == typeof require && require;
				if (!u && a) return a(o, !0);
				if (i) return i(o, !0);
				throw new Error("Cannot find module '" + o + "'")
			}
			var f = n[o] = {
				exports: {}
			};
			t[o][0].call(f.exports, function(e) {
				var n = t[o][1][e];
				return s(n ? n : e)
			}, f, f.exports, e, t, n, r)
		}
		return n[o].exports
	}
	for (var i = "function" == typeof require && require, o = 0; o < r.length; o++) s(r[o]);
	return s
}({
	1: [function(require, module, exports) {
		"use strict";

		function fuzzysearch(needle, haystack) {
			var tlen = haystack.length,
				qlen = needle.length;
			if (qlen > tlen) return !1;
			if (qlen === tlen) return needle === haystack;
			outer: for (var i = 0, j = 0; i < qlen; i++) {
				for (var nch = needle.charCodeAt(i); j < tlen;)
					if (haystack.charCodeAt(j++) === nch) continue outer;
				return !1
			}
			return !0
		}
		module.exports = fuzzysearch
	}, {}],
	2: [function(require, module, exports) {
		"use strict";

		function load(location, callback) {
			var xhr = getXHR();
			xhr.open("GET", location, !0), xhr.onreadystatechange = createStateChangeListener(xhr, callback), xhr.send()
		}

		function createStateChangeListener(xhr, callback) {
			return function() {
				if (4 === xhr.readyState && 200 === xhr.status) try {
					callback(null, JSON.parse(xhr.responseText))
				} catch (err) {
					callback(err, null)
				}
			}
		}

		function getXHR() {
			return window.XMLHttpRequest ? new XMLHttpRequest : new ActiveXObject("Microsoft.XMLHTTP")
		}
		module.exports = {
			load: load
		}
	}, {}],
	3: [function(require, module, exports) {
		"use strict";
		module.exports = function OptionsValidator(params) {
			function validateParams(params) {
				return !!params && (void 0 !== params.required && params.required instanceof Array)
			}
			if (!validateParams(params)) throw new Error("-- OptionsValidator: required options missing");
			if (!(this instanceof OptionsValidator)) return new OptionsValidator(params);
			var requiredOptions = params.required;
			this.getRequiredOptions = function() {
				return requiredOptions
			}, this.validate = function(parameters) {
				var errors = [];
				return requiredOptions.forEach(function(requiredOptionName) {
					void 0 === parameters[requiredOptionName] && errors.push(requiredOptionName)
				}), errors
			}
		}
	}, {}],
	4: [function(require, module, exports) {
		"use strict";

		function put(data) {
			return isObject(data) ? addObject(data) : isArray(data) ? addArray(data) : void 0
		}

		function clear() {
			return data.length = 0, data
		}

		function get() {
			return data
		}

		function isObject(obj) {
			return !!obj && "[object Object]" === Object.prototype.toString.call(obj)
		}

		function isArray(obj) {
			return !!obj && "[object Array]" === Object.prototype.toString.call(obj)
		}

		function addObject(_data) {
			return data.push(_data), data
		}

		function addArray(_data) {
			for (var added = [], i = 0; i < _data.length; i++) isObject(_data[i]) && added.push(addObject(_data[i]));
			return added
		}

		function search(crit) {
			return crit ? findMatches(data, crit, opt.searchStrategy, opt) : []
		}

		function setOptions(_opt) {
			opt = _opt || {}, opt.fuzzy = _opt.fuzzy || !1, opt.limit = _opt.limit || 10, opt.searchStrategy = _opt.fuzzy ? FuzzySearchStrategy : LiteralSearchStrategy
		}

		function findMatches(data, crit, strategy, opt) {
			for (var matches = [], i = 0; i < data.length && matches.length < opt.limit; i++) {
				var match = findMatchesInObject(data[i], crit, strategy, opt);
				match && matches.push(match)
			}
			return matches
		}

		function findMatchesInObject(obj, crit, strategy, opt) {
			for (var key in obj)
				if (!isExcluded(obj[key], opt.exclude) && strategy.matches(obj[key], crit)) return obj
		}

		function isExcluded(term, excludedTerms) {
			var excluded = !1;
			excludedTerms = excludedTerms || [];
			for (var i = 0; i < excludedTerms.length; i++) {
				var excludedTerm = excludedTerms[i];
				!excluded && new RegExp(term).test(excludedTerm) && (excluded = !0)
			}
			return excluded
		}
		module.exports = {
			put: put,
			clear: clear,
			get: get,
			search: search,
			setOptions: setOptions
		};
		var FuzzySearchStrategy = require("./SearchStrategies/FuzzySearchStrategy"),
			LiteralSearchStrategy = require("./SearchStrategies/LiteralSearchStrategy"),
			data = [],
			opt = {};
		opt.fuzzy = !1, opt.limit = 10, opt.searchStrategy = opt.fuzzy ? FuzzySearchStrategy : LiteralSearchStrategy
	}, {
		"./SearchStrategies/FuzzySearchStrategy": 5,
		"./SearchStrategies/LiteralSearchStrategy": 6
	}],
	5: [function(require, module, exports) {
		"use strict";

		function FuzzySearchStrategy() {
			this.matches = function(string, crit) {
				return fuzzysearch(crit, string)
			}
		}
		var fuzzysearch = require("fuzzysearch");
		module.exports = new FuzzySearchStrategy
	}, {
		fuzzysearch: 1
	}],
	6: [function(require, module, exports) {
		"use strict";

		function LiteralSearchStrategy() {
			this.matches = function(string, crit) {
				return "string" == typeof string && (string = string.trim(), string.toLowerCase().indexOf(crit.toLowerCase()) >= 0)
			}
		}
		module.exports = new LiteralSearchStrategy
	}, {}],
	7: [function(require, module, exports) {
		"use strict";

		function setOptions(_options) {
			options.pattern = _options.pattern || options.pattern, options.template = _options.template || options.template, "function" == typeof _options.middleware && (options.middleware = _options.middleware)
		}

		function compile(data) {
			return options.template.replace(options.pattern, function(match, prop) {
				var value = options.middleware(prop, data[prop], options.template);
				return void 0 !== value ? value : data[prop] || match
			})
		}
		module.exports = {
			compile: compile,
			setOptions: setOptions
		};
		var options = {};
		options.pattern = /\{(.*?)\}/g, options.template = "", options.middleware = function() {}
	}, {}],
	8: [function(require, module, exports) {
		! function(window, document, undefined) {
			"use strict";

			function initWithJSON(json) {
				repository.put(json), registerInput()
			}

			function initWithURL(url) {
				jsonLoader.load(url, function(err, json) {
					err && throwError("failed to get JSON (" + url + ")"), initWithJSON(json)
				})
			}

			function emptyResultsContainer() {
				options.resultsContainer.innerHTML = ""
			}

			function appendToResultsContainer(text) {
				options.resultsContainer.innerHTML += text
			}

			function registerInput() {
				options.searchInput.addEventListener("keyup", function(e) {
					emptyResultsContainer();
					var key = e.which,
						query = e.target.value;
					isWhitelistedKey(key) && isValidQuery(query) && render(repository.search(query))
				})
			}

			function render(results) {
				if (0 === results.length) return appendToResultsContainer(options.noResultsText);
				for (var i = 0; i < results.length; i++) appendToResultsContainer(templater.compile(results[i]))
			}

			function isValidQuery(query) {
				return query && query.length > 0
			}

			function isWhitelistedKey(key) {
				return [13, 16, 20, 37, 38, 39, 40, 91].indexOf(key) === -1
			}

			function throwError(message) {
				throw new Error("SimpleJekyllSearch --- " + message)
			}
			var options = {
					searchInput: null,
					resultsContainer: null,
					json: [],
					searchResultTemplate: '<li><a href="{url}" title="{desc}" target="_blank">{title}</a></li>',
					templateMiddleware: function() {},
					noResultsText: "No results found",
					limit: 10,
					fuzzy: !1,
					exclude: []
				},
				requiredOptions = ["searchInput", "resultsContainer", "json"],
				templater = require("./Templater"),
				repository = require("./Repository"),
				jsonLoader = require("./JSONLoader"),
				optionsValidator = require("./OptionsValidator")({
					required: requiredOptions
				}),
				utils = require("./utils");
			window.SimpleJekyllSearch = function(_options) {
				var errors = optionsValidator.validate(_options);
				errors.length > 0 && throwError("You must specify the following required options: " + requiredOptions), options = utils.merge(options, _options), templater.setOptions({
					template: options.searchResultTemplate,
					middleware: options.templateMiddleware
				}), repository.setOptions({
					fuzzy: options.fuzzy,
					limit: options.limit
				}), utils.isJSON(options.json) ? initWithJSON(options.json) : initWithURL(options.json)
			}, window.SimpleJekyllSearch.init = window.SimpleJekyllSearch, "function" == typeof window.SimpleJekyllSearchInit && window.SimpleJekyllSearchInit.call(this, window.SimpleJekyllSearch)
		}(window, document)
	}, {
		"./JSONLoader": 2,
		"./OptionsValidator": 3,
		"./Repository": 4,
		"./Templater": 7,
		"./utils": 9
	}],
	9: [function(require, module, exports) {
		"use strict";

		function merge(defaultParams, mergeParams) {
			var mergedOptions = {};
			for (var option in defaultParams) mergedOptions[option] = defaultParams[option], void 0 !== mergeParams[option] && (mergedOptions[option] = mergeParams[option]);
			return mergedOptions
		}

		function isJSON(json) {
			try {
				return !!(json instanceof Object && JSON.parse(JSON.stringify(json)))
			} catch (e) {
				return !1
			}
		}
		module.exports = {
			merge: merge,
			isJSON: isJSON
		}
	}, {}]
}, {}, [8]);
! function(a) {
	Zoomify = function(b, c) {
		var d = this;
		this._zooming = !1, this._zoomed = !1, this._timeout = null, this.$shadow = null, this.$image = a(b).addClass("zoomify"), this.options = a.extend({}, Zoomify.DEFAULTS, this.$image.data(), c), this.$image.on("click", function() {
			d.zoom()
		}), a(window).on("resize", function() {
			d.reposition()
		}), a(document).on("scroll", function() {
			d.reposition()
		})
	}, Zoomify.DEFAULTS = {
		duration: 200,
		easing: "linear",
		scale: .9
	}, Zoomify.prototype.transition = function(a, b) {
		a.css({
			"-webkit-transition": b,
			"-moz-transition": b,
			"-ms-transition": b,
			"-o-transition": b,
			transition: b
		})
	}, Zoomify.prototype.addTransition = function(a) {
		this.transition(a, "all " + this.options.duration + "ms " + this.options.easing)
	}, Zoomify.prototype.removeTransition = function(b, c) {
		var d = this;
		clearTimeout(this._timeout), this._timeout = setTimeout(function() {
			d.transition(b, ""), a.isFunction(c) && c.call(d)
		}, this.options.duration)
	}, Zoomify.prototype.transform = function(a) {
		this.$image.css({
			"-webkit-transform": a,
			"-moz-transform": a,
			"-ms-transform": a,
			"-o-transform": a,
			transform: a
		})
	}, Zoomify.prototype.transformScaleAndTranslate = function(a, b, c, d) {
		this.addTransition(this.$image), this.transform("scale(" + a + ") translate(" + b + "px, " + c + "px)"), this.removeTransition(this.$image, d)
	}, Zoomify.prototype.zoom = function() {
		this._zooming || (this._zoomed ? this.zoomOut() : this.zoomIn())
	}, Zoomify.prototype.zoomIn = function() {
		var b = this,
			c = this.$image.css("transform");
		this.transition(this.$image, "none"), this.transform("none");
		var d = this.$image.offset(),
			e = this.$image.outerWidth(),
			f = this.$image.outerHeight(),
			g = this.$image[0].naturalWidth || +(1 / 0),
			h = this.$image[0].naturalHeight || +(1 / 0),
			i = a(window).width(),
			j = a(window).height(),
			k = Math.min(g, i * this.options.scale) / e,
			l = Math.min(h, j * this.options.scale) / f,
			m = Math.min(k, l),
			n = (-d.left + (i - e) / 2) / m,
			o = (-d.top + (j - f) / 2 + a(document).scrollTop()) / m;
		this.transform(c), this._zooming = !0, this.$image.addClass("zoomed").trigger("zoom-in.zoomify"), setTimeout(function() {
			b.addShadow(), b.transformScaleAndTranslate(m, n, o, function() {
				b._zooming = !1, b.$image.trigger("zoom-in-complete.zoomify")
			}), b._zoomed = !0
		})
	}, Zoomify.prototype.zoomOut = function() {
		var a = this;
		this._zooming = !0, this.$image.trigger("zoom-out.zoomify"), this.transformScaleAndTranslate(1, 0, 0, function() {
			a._zooming = !1, a.$image.removeClass("zoomed").trigger("zoom-out-complete.zoomify")
		}), this.removeShadow(), this._zoomed = !1
	}, Zoomify.prototype.reposition = function() {
		this._zoomed && (this.transition(this.$image, "none"), this.zoomIn())
	}, Zoomify.prototype.addShadow = function() {
		var b = this;
		this._zoomed || (b.$shadow && b.$shadow.remove(), this.$shadow = a('<div class="zoomify-shadow"></div>'), a("body").append(this.$shadow), this.addTransition(this.$shadow), this.$shadow.on("click", function() {
			b.zoomOut()
		}), setTimeout(function() {
			b.$shadow.addClass("zoomed")
		}, 10))
	}, Zoomify.prototype.removeShadow = function() {
		var a = this;
		this.$shadow && (this.addTransition(this.$shadow), this.$shadow.removeClass("zoomed"), this.$image.one("zoom-out-complete.zoomify", function() {
			a.$shadow && a.$shadow.remove(), a.$shadow = null
		}))
	}, a.fn.zoomify = function(b) {
		return this.each(function() {
			var c = a(this),
				d = c.data("zoomify");
			d || c.data("zoomify", d = new Zoomify(this, "object" == typeof b && b)), "string" == typeof b && ["zoom", "zoomIn", "zoomOut", "reposition"].indexOf(b) >= 0 && d[b]()
		})
	}
}(jQuery);
! function() {
	if (/Android|webOS|iPhone|iPod|iPad|BlackBerry/i.test(navigator.userAgent)) var t = 120;
	else var t = 320;
	var s = document.querySelectorAll(".docs-header")[0],
		i = window.innerWidth - 20,
		n = s.offsetHeight,
		a = 0,
		r = 0,
		h = 150,
		o = function(t) {
			return t * Math.PI / 180
		},
		e = function() {
			return Math.sin(Math.floor(360 * Math.random()) * Math.PI / 180)
		},
		d = {
			obj: {
				x: a,
				y: r,
				z: h
			},
			dest: {
				x: 0,
				y: 0,
				z: 1
			},
			dist: {
				x: 0,
				y: 0,
				z: 200
			},
			ang: {
				cplane: 0,
				splane: 0,
				ctheta: 0,
				stheta: 0
			},
			zoom: 1,
			disp: {
				x: i / 2,
				y: n / 2,
				z: 0
			},
			upd: function() {
				d.dist.x = d.dest.x - d.obj.x, d.dist.y = d.dest.y - d.obj.y, d.dist.z = d.dest.z - d.obj.z, d.ang.cplane = -d.dist.z / Math.sqrt(d.dist.x * d.dist.x + d.dist.z * d.dist.z), d.ang.splane = d.dist.x / Math.sqrt(d.dist.x * d.dist.x + d.dist.z * d.dist.z), d.ang.ctheta = Math.sqrt(d.dist.x * d.dist.x + d.dist.z * d.dist.z) / Math.sqrt(d.dist.x * d.dist.x + d.dist.y * d.dist.y + d.dist.z * d.dist.z), d.ang.stheta = -d.dist.y / Math.sqrt(d.dist.x * d.dist.x + d.dist.y * d.dist.y + d.dist.z * d.dist.z)
			}
		},
		c = {
			parts: {
				sz: function(t, s) {
					return {
						x: t.x * s.x,
						y: t.y * s.y,
						z: t.z * s.z
					}
				},
				rot: {
					x: function(t, s) {
						return {
							x: t.x,
							y: t.y * Math.cos(o(s.x)) - t.z * Math.sin(o(s.x)),
							z: t.y * Math.sin(o(s.x)) + t.z * Math.cos(o(s.x))
						}
					},
					y: function(t, s) {
						return {
							x: t.x * Math.cos(o(s.y)) + t.z * Math.sin(o(s.y)),
							y: t.y,
							z: -t.x * Math.sin(o(s.y)) + t.z * Math.cos(o(s.y))
						}
					},
					z: function(t, s) {
						return {
							x: t.x * Math.cos(o(s.z)) - t.y * Math.sin(o(s.z)),
							y: t.x * Math.sin(o(s.z)) + t.y * Math.cos(o(s.z)),
							z: t.z
						}
					}
				},
				pos: function(t, s) {
					return {
						x: t.x + s.x,
						y: t.y + s.y,
						z: t.z + s.z
					}
				}
			},
			pov: {
				plane: function(t) {
					return {
						x: t.x * d.ang.cplane + t.z * d.ang.splane,
						y: t.y,
						z: t.x * -d.ang.splane + t.z * d.ang.cplane
					}
				},
				theta: function(t) {
					return {
						x: t.x,
						y: t.y * d.ang.ctheta - t.z * d.ang.stheta,
						z: t.y * d.ang.stheta + t.z * d.ang.ctheta
					}
				},
				set: function(t) {
					return {
						x: t.x - d.obj.x,
						y: t.y - d.obj.y,
						z: t.z - d.obj.z
					}
				}
			},
			persp: function(t) {
				return {
					x: t.x * d.dist.z / t.z * d.zoom,
					y: t.y * d.dist.z / t.z * d.zoom,
					z: t.z * d.zoom,
					p: d.dist.z / t.z
				}
			},
			disp: function(t, s) {
				return {
					x: t.x + s.x,
					y: -t.y + s.y,
					z: t.z + s.z,
					p: t.p
				}
			},
			steps: function(t, s, i, n, a) {
				var r = c.parts.sz(t, s);
				return r = c.parts.rot.x(r, i), r = c.parts.rot.y(r, i), r = c.parts.rot.z(r, i), r = c.parts.pos(r, n), r = c.pov.plane(r), r = c.pov.theta(r), r = c.pov.set(r), r = c.persp(r), r = c.disp(r, a)
			}
		};
	! function() {
		"use strict";
		window.requestAnimFrame = (function() {
			return window.requestAnimationFrame ||
				window.webkitRequestAnimationFrame ||
				window.mozRequestAnimationFrame ||
				window.oRequestAnimationFrame ||
				window.msRequestAnimationFrame ||
				function(callback) {
					window.setTimeout(callback, 1000 / 60);
				};
		})();

		var canvas = document.getElementsByTagName("canvas")[0];
		var ctx = canvas.getContext("2d");
		var w = $(document).width();
		var h = $(document).height();
		canvas.width = w;
		canvas.height = h;
		canvas.ZIndex = -999999;

		var mols = [];

		function init() {
			for (var i = 0; i < 18; i++) {
				var mol = new generate_mol("C8H10N4O2");
				mols.push(mol);
				var mol = new generate_mol("C6H6O");
				mols.push(mol);
				var mol = new generate_mol("C6H6");
				mols.push(mol);
			}
		}

		function draw() {
			canvas.width = canvas.width;
			for (var i = 0; i < mols.length; i++) {
				var m = mols[i];
				m.x += m.vx;
				if (m.x >= w - 100 || m.x <= 0) {
					m.vx = -m.vx;
				}
				m.y += m.vy;
				if (m.y >= h - 100 || m.y <= 0) {
					m.vy = -m.vy;
				}

				m.r += 0.005;
				m.draw();
			}
		}

		function generate_mol(mol) {
			this.x = Math.random() * w;
			this.y = Math.random() * h;
			this.vx = Math.random() * -2;
			this.vy = Math.random() * 2;
			this.vr = 0.1;
			this.r = Math.random() * Math.PI;
			this.draw = function() {
				if (mol == "C6H6O") {
					//Phenol
					ctx.save();
					ctx.translate(this.x + 20, this.y + 80);
					ctx.rotate(this.r);
					ctx.translate(-this.x + 20, -this.y - 80);
					ctx.beginPath();
					ctx.moveTo(this.x, this.y + 5);
					ctx.lineTo(this.x, this.y + 30);
					ctx.lineTo(this.x - 26, this.y + 45);
					ctx.lineTo(this.x - 26, this.y + 75);
					ctx.lineTo(this.x, this.y + 90);
					ctx.lineTo(this.x + 26, this.y + 75);
					ctx.lineTo(this.x + 26, this.y + 45);
					ctx.lineTo(this.x, this.y + 30);
					ctx.moveTo(this.x - 20, this.y + 47);
					ctx.lineTo(this.x - 20, this.y + 73);
					ctx.moveTo(this.x, this.y + 83);
					ctx.lineTo(this.x + 22, this.y + 70);
					ctx.moveTo(this.x, this.y + 36);
					ctx.lineTo(this.x + 22, this.y + 49);
					ctx.strokeStyle = "rgba(180,180,180,0.5)";
					ctx.lineWidth = 3;
					ctx.stroke();
					ctx.fillStyle = "rgba(180,180,180,0.5)";
					ctx.font = "15px Arial";
					ctx.fillText("OH", this.x - 5, this.y);
					ctx.closePath();
					ctx.restore();
				} else if (mol == "C8H10N4O2") {
					//Caffeine
					ctx.save();
					ctx.translate(this.x + 20, this.y + 80);
					ctx.rotate(this.r);
					ctx.translate(-this.x + 20, -this.y - 80);
					ctx.beginPath();
					ctx.moveTo(this.x, this.y + 5);
					ctx.lineTo(this.x, this.y + 22);
					ctx.moveTo(this.x - 9, this.y + 35);
					ctx.lineTo(this.x - 26, this.y + 45);
					ctx.lineTo(this.x - 26, this.y + 75);
					ctx.lineTo(this.x, this.y + 90);
					ctx.lineTo(this.x + 18, this.y + 80);
					ctx.moveTo(this.x + 26, this.y + 68);
					ctx.lineTo(this.x + 26, this.y + 45);
					ctx.lineTo(this.x + 9, this.y + 35);
					ctx.moveTo(this.x - 20, this.y + 47);
					ctx.lineTo(this.x - 20, this.y + 73);
					ctx.moveTo(this.x + 23, this.y + 42);
					ctx.lineTo(this.x + 36, this.y + 32);
					ctx.moveTo(this.x + 26, this.y + 46);
					ctx.lineTo(this.x + 39, this.y + 36);
					ctx.moveTo(this.x + 34, this.y + 81);
					ctx.lineTo(this.x + 48, this.y + 90);
					ctx.moveTo(this.x - 2, this.y + 88);
					ctx.lineTo(this.x - 2, this.y + 110);
					ctx.moveTo(this.x + 3, this.y + 88);
					ctx.lineTo(this.x + 3, this.y + 110);
					ctx.moveTo(this.x - 26, this.y + 45);
					ctx.lineTo(this.x - 46, this.y + 38);
					ctx.moveTo(this.x - 60, this.y + 44);
					ctx.lineTo(this.x - 74, this.y + 58);
					ctx.lineTo(this.x - 61, this.y + 77);
					ctx.moveTo(this.x - 58, this.y + 49);
					ctx.lineTo(this.x - 68, this.y + 59);
					ctx.moveTo(this.x - 46, this.y + 82);
					ctx.lineTo(this.x - 26, this.y + 73);
					ctx.moveTo(this.x - 60, this.y + 86);
					ctx.lineTo(this.x - 70, this.y + 100);
					ctx.strokeStyle = "rgba(180,180,180,0.5)";
					ctx.lineWidth = 3;
					ctx.stroke();
					ctx.fillStyle = "rgbargba(180,180,180,0.5)";
					ctx.font = "15px Arial";
					ctx.fillText("CH", this.x - 5, this.y);
					ctx.fillText("3", this.x + 18, this.y + 6);
					ctx.fillText("N", this.x - 5, this.y + 37);
					ctx.fillText("O", this.x + 38, this.y + 35);
					ctx.fillText("N", this.x + 21, this.y + 81);
					ctx.fillText("CH", this.x + 50, this.y + 99);
					ctx.fillText("3", this.x + 72, this.y + 105);
					ctx.fillText("O", this.x - 5, this.y + 124);
					ctx.fillText("N", this.x - 59, this.y + 42);
					ctx.fillText("N", this.x - 59, this.y + 84);
					ctx.fillText("H  C", this.x - 98, this.y + 114);
					ctx.fillText("3", this.x - 87, this.y + 119);
					ctx.closePath();
					ctx.restore();
				} else if (mol == "C6H6") {
					//Benzene
					ctx.save();
					ctx.translate(this.x + 20, this.y + 80);
					ctx.rotate(this.r);
					ctx.translate(-this.x + 20, -this.y - 80);
					ctx.beginPath();
					ctx.moveTo(this.x, this.y + 30);
					ctx.lineTo(this.x - 26, this.y + 45);
					ctx.lineTo(this.x - 26, this.y + 75);
					ctx.lineTo(this.x, this.y + 90);
					ctx.lineTo(this.x + 26, this.y + 75);
					ctx.lineTo(this.x + 26, this.y + 45);
					ctx.lineTo(this.x, this.y + 30);
					ctx.moveTo(this.x - 20, this.y + 47);
					ctx.lineTo(this.x - 20, this.y + 73);
					ctx.moveTo(this.x, this.y + 83);
					ctx.lineTo(this.x + 22, this.y + 70);
					ctx.moveTo(this.x, this.y + 36);
					ctx.lineTo(this.x + 22, this.y + 49);
					ctx.strokeStyle = "rgba(180,180,180,0.5)";
					ctx.lineWidth = 3;
					ctx.stroke();
					ctx.closePath();
					ctx.restore();
				}
			}
		}

		init();

		function animloop() {
			draw();
			requestAnimFrame(animloop);
		}

		animloop();
	}(), window.addEventListener("resize", function() {
		var t = document.querySelectorAll(".docs-header")[0];
	}, !1)
}();